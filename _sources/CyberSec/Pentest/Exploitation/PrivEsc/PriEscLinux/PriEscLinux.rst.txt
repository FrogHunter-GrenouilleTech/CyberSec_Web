============================
Privilege escalation - Linux
============================

.. index::
   single: Privilege Escalation; Privilege Escalation - Linux

.. contents::
    :backlinks: top


####

A lot of devices running on Linux.

    .. note::

       Examples of devices that are very likely to run a Linux operating system are :

        * Firewalls
        * Routers
        * VOIP servers
        * NAS
        * Web servers
    
These kinds of devices are very critical for a company’s infrastructure with severe consequences
when they are compromised.

It happens very often that system administrators in Windows environments overlook the Linux devices
for many reasons. One of these reasons is the lack of knowledge about how to maintain Linux systems
and how to secure them. This can result in critical Linux devices being the weakest link in the
security chain and become a great security threat.

Therefore, it is very important as a penetration tester to focus not only on Windows systems because
they cover 90% of the company’s devices but also on (critical) Linux systems.

The most common ways of privilege escalation on Linux systems are leveraging kernel vulnerabilities,
misconfigurations and vulnerable software to execute arbitrary code under root privileges. New
kernel vulnerabilities occur on a regular basis and often involve a wide range of kernel versions. A
recently discovered example of a kernel vulnerability allowing for privilege escalation is the
**DirtyCOW vulnerability** affecting hundreds of Linux kernel versions. Also misconfigurations in
files, services and security mechanisms and out of date software commonly allow for privilege
escalation.

####

--------------------------------------
Collecting system information manually
--------------------------------------

Nearly every step of a Pentest is related to the **Enumeration**. The privilege escalation doesn't
make exception. Collecting relevant system information can be useful for privilege escalation such
as the kernel version, running services, installed applications and file permissions.

This will not only help us to gain a better understanding of how a system is configured but also to
know which applications and services are running on the host. Services running with root privileges
are of especial interest for privilege escalation. When we can exploit a service running as root to
execute arbitrary commands they will be executed as root. Applications that are configured to be
executed with higher privileges using a Linux feature named SUID are also very useful.

    .. note:: 
        
       For effective privilege escalation in Linux the system information you should know includes:

            * Distribution type
            * Kernel version
            * Running applications and services
            * Weak file permissions
            * Scheduled jobs
            * Other important information about the system. 

Collecting system information can be done both manually and automatically with scripts. The use of
automated scripts generally saves you a lot of time, but the information collected will be limited
to that which the script is programmed to retrieve. For example, if a script is not designed to
retrieve active connections then you may never find out about that one critical port running an
admin interface which is only accessible locally.

Linux command to get system information
=======================================

OS, Kernel & Hostname
---------------------

    .. note:: 
        
        The following commands print the operating system, kernel version, hostname and system
        information to the terminal.

        .. code:: inputLanguage
            :number-lines:
            :force:

             cat /etc/issue
             cat /proc/version
             hostname
             uname -a

        .. image:: images/Linux-local-enumeration1.jpg
           :width: 500 px
           :align: center

        This information acquired can be used to check the Linux distribution and kernel for known
        vulnerabilities, for instance, on Exploit-db or with searchsploit.

It is also highly recommended to search the OS version in Google or Exploit-db for available
(kernel) exploits. This sometimes produces better search results.

    .. note:: 
        
        The following example concerns a machine with kernel version **3.10.0-123 on CentOS
        7.0.1406** which is vulnerable to **CVE2014-3153**
        
        .. code:: shell
            :number-lines:
            :force:

             cat /etc/centos-release

        .. image:: images/PE-OS-Version-03-2.jpg
           :width: 500 px
           :align: center

Searching for the specific kernel version does not immediately return useful search results for privilege escalation exploits.

    .. note:: 
        
        Searching on the OS version for privilege escalation exploits does provide some interesting
        results.

        .. image:: images/PE-OS-Version-01.jpg
           :width: 500 px
           :align: center

####

--------
Weblinks
--------

.. target-notes::